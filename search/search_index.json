{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SirEdvin's mods hub \u00b6 Here I will place documentation for my current minecraft mods (mostly ComputerCraft related).","title":"Home"},{"location":"#siredvins-mods-hub","text":"Here I will place documentation for my current minecraft mods (mostly ComputerCraft related).","title":"SirEdvin's mods hub"},{"location":"turtlematic/","text":"Turtlematic \u00b6 Turtlematic - is mod about making turtles so useful, so you will never need any other automation mod! Most of peripheral methods are collected into API methods. Every new automata core, that you will craft expand or evolve those abilities by methods and parameters will stay the same! Current features list \u00b6 With this mod turtles will be able to: Simulate player right and left click with items on blocks and mobs Capture and release blocks and mobs Teleporting to previously stored points in world Placing chat bubbles on top of themself Searching for mobs or items around turtle and more feature comes Getting started \u00b6 Picture Soul vial recipe To start with the main part of this mod, you need to obtain a Soul vial and start gathering souls. To collect soul you just need to right click on soul sand with this vial, it consumes soul and transform soul sand into usual sand. You can track soul consumption progress by tooltip and image picture. After enough soul it will be transformed into \"Filled soul vial\" that can be used to craft your first automata ! Improving automata core \u00b6 Picture Soul scrapper recipe Crafted automata core is just the first step. To improve it you need a tool, that will allow to you to collect souls and infuse your automata core with it. This tool is called Soul Scrapper . Terrifying scythe that are too evil to be used by human hand. Thankfully, you can use turtles for this dirty and evil job. Picture Poor cow At automata page you can see cores, that can be created from base one.","title":"Home"},{"location":"turtlematic/#turtlematic","text":"Turtlematic - is mod about making turtles so useful, so you will never need any other automation mod! Most of peripheral methods are collected into API methods. Every new automata core, that you will craft expand or evolve those abilities by methods and parameters will stay the same!","title":"Turtlematic"},{"location":"turtlematic/#current-features-list","text":"With this mod turtles will be able to: Simulate player right and left click with items on blocks and mobs Capture and release blocks and mobs Teleporting to previously stored points in world Placing chat bubbles on top of themself Searching for mobs or items around turtle and more feature comes","title":"Current features list"},{"location":"turtlematic/#getting-started","text":"Picture Soul vial recipe To start with the main part of this mod, you need to obtain a Soul vial and start gathering souls. To collect soul you just need to right click on soul sand with this vial, it consumes soul and transform soul sand into usual sand. You can track soul consumption progress by tooltip and image picture. After enough soul it will be transformed into \"Filled soul vial\" that can be used to craft your first automata !","title":"Getting started"},{"location":"turtlematic/#improving-automata-core","text":"Picture Soul scrapper recipe Crafted automata core is just the first step. To improve it you need a tool, that will allow to you to collect souls and infuse your automata core with it. This tool is called Soul Scrapper . Terrifying scythe that are too evil to be used by human hand. Thankfully, you can use turtles for this dirty and evil job. Picture Poor cow At automata page you can see cores, that can be created from base one.","title":"Improving automata core"},{"location":"turtlematic/api/capture/","text":"Capture API \u00b6 Capture API allows moving block or entities with storing it internal data! So finally, you can move specific spawners and chests! Take a note, that released entity or block will be placed at front of turtle. Also, block can be placed only on empty space Danger Due to ComputerCraft limitations stored entity will be lost if you unequip turtle upgrade. Function Returns Description capture(mode: InteractionMode , direction?: Direction ) Result Tries to capture object: entity or block release() Result Tiers to release object: create entity or place block getCaptured() table Returns information about captured entity (including NBT data) My modpack have blocks or entities, that crash game when captured, what I can do? Add tag turtlematic:capture_blacklist to those blocks or entities.","title":"Capture API"},{"location":"turtlematic/api/capture/#capture-api","text":"Capture API allows moving block or entities with storing it internal data! So finally, you can move specific spawners and chests! Take a note, that released entity or block will be placed at front of turtle. Also, block can be placed only on empty space Danger Due to ComputerCraft limitations stored entity will be lost if you unequip turtle upgrade. Function Returns Description capture(mode: InteractionMode , direction?: Direction ) Result Tries to capture object: entity or block release() Result Tiers to release object: create entity or place block getCaptured() table Returns information about captured entity (including NBT data) My modpack have blocks or entities, that crash game when captured, what I can do? Add tag turtlematic:capture_blacklist to those blocks or entities.","title":"Capture API"},{"location":"turtlematic/api/configuration/","text":"Configuration API \u00b6 Configuration API allows a peripheral user to understand current peripheral limitations and how you can use it. Any additional limit, that provided by peripheral can be retrieved from getConfiguration() method. Values, that can be retrieved with help of this method are marked like valueInConfiguration in this documentation. Function Returns Description getConfiguration() table Returns table with configuration.","title":"Configuration API"},{"location":"turtlematic/api/configuration/#configuration-api","text":"Configuration API allows a peripheral user to understand current peripheral limitations and how you can use it. Any additional limit, that provided by peripheral can be retrieved from getConfiguration() method. Values, that can be retrieved with help of this method are marked like valueInConfiguration in this documentation. Function Returns Description getConfiguration() table Returns table with configuration.","title":"Configuration API"},{"location":"turtlematic/api/experience/","text":"Experience API \u00b6 This API is dedicated to XP manipulations: collecting it, moving out/to player and store it inside turtle. Danger Due to ComputerCraft limitations all stored XP will be lost if you unequip turtle upgrade. Function Returns Description getStoredXP() number Returns amount of stored XP getOwnerXP() number Returns amount of owner XP collectXP() number Collects XP in interactionRadius around turtle. Returns amount of collected XP suckOwnerXP(limit: number) Result[number] Tries to get XP from turtle owner not more that provided limit (but can be less). Returns XP amount that was obtained from owner sendXPToOwner(limit: number) Result[number] Tries to send XP to turtle owner not more that provided limit (but can be less). Returns XP amount that was sent to owner burnXP(limit: number) Result[number] Tries to transform XP to fuel not more that provided limit (but can be less). Returns XP amount that was transformed to fuel","title":"Experience API"},{"location":"turtlematic/api/experience/#experience-api","text":"This API is dedicated to XP manipulations: collecting it, moving out/to player and store it inside turtle. Danger Due to ComputerCraft limitations all stored XP will be lost if you unequip turtle upgrade. Function Returns Description getStoredXP() number Returns amount of stored XP getOwnerXP() number Returns amount of owner XP collectXP() number Collects XP in interactionRadius around turtle. Returns amount of collected XP suckOwnerXP(limit: number) Result[number] Tries to get XP from turtle owner not more that provided limit (but can be less). Returns XP amount that was obtained from owner sendXPToOwner(limit: number) Result[number] Tries to send XP to turtle owner not more that provided limit (but can be less). Returns XP amount that was sent to owner burnXP(limit: number) Result[number] Tries to transform XP to fuel not more that provided limit (but can be less). Returns XP amount that was transformed to fuel","title":"Experience API"},{"location":"turtlematic/api/fuel/","text":"Fuel API \u00b6 Most of the usage for fuel API comes when you're trying to degrease cooldown for specific operations. If you increase fuel consumption rate for peripheral, automatically it will decrease cooldowns after peripheral method usage (but not initial cooldowns). For example, if click operation required 1 fuel point to perform and will have 5 seconds cooldown, with fuel consumption 2 you can perform click operation one in 2.5 seconds, but in cost of 2 fuel point. Take a note that fuel point will grow faster, than cooldown drops. Basically, consumedFuel = 2^(fuelConsumtionRate - 1) . So fuelConsumtionRate 3 will require 4 fuel points, and fuelConsumtionRate 4 will require 8 fuel points, etc. Warning fuelConsumptionRate should be positive integer Function Returns Description getFuelLevel() number Returns current fuel level, for turtle is equivalent for turtle.getFuelLevel() getFuelMaxLevel() number Returns max fuel level, for turtle is equivalent for turtle.getFuelLimit() getFuelConsumptionRate() number Return current fuel consumption rate setFuelConsumptionRate(rate: number) nil Tries to set fuel consumption rate to new value. Will throw error if rate lower than 1 or bigger than maxFuelConsumptionRate","title":"Fuel API"},{"location":"turtlematic/api/fuel/#fuel-api","text":"Most of the usage for fuel API comes when you're trying to degrease cooldown for specific operations. If you increase fuel consumption rate for peripheral, automatically it will decrease cooldowns after peripheral method usage (but not initial cooldowns). For example, if click operation required 1 fuel point to perform and will have 5 seconds cooldown, with fuel consumption 2 you can perform click operation one in 2.5 seconds, but in cost of 2 fuel point. Take a note that fuel point will grow faster, than cooldown drops. Basically, consumedFuel = 2^(fuelConsumtionRate - 1) . So fuelConsumtionRate 3 will require 4 fuel points, and fuelConsumtionRate 4 will require 8 fuel points, etc. Warning fuelConsumptionRate should be positive integer Function Returns Description getFuelLevel() number Returns current fuel level, for turtle is equivalent for turtle.getFuelLevel() getFuelMaxLevel() number Returns max fuel level, for turtle is equivalent for turtle.getFuelLimit() getFuelConsumptionRate() number Return current fuel consumption rate setFuelConsumptionRate(rate: number) nil Tries to set fuel consumption rate to new value. Will throw error if rate lower than 1 or bigger than maxFuelConsumptionRate","title":"Fuel API"},{"location":"turtlematic/api/interaction/","text":"Interaction API \u00b6 Interaction API allows to fully simulate player left and right clicks. However, instead of simple simulation this API provides some benefits: All loot will be automatically collected For some core tiers tool will not be damaged Left clicks are always charged. So sword will always hit with full power Function Returns Description use(mode: InteractionMode , direction?: Direction ) Result Emulates rightClick with item in selected slot swing(mode: InteractionMode , direction?: Direction ) Result Emulates leftClick with item in selected slot","title":"Interaction API"},{"location":"turtlematic/api/interaction/#interaction-api","text":"Interaction API allows to fully simulate player left and right clicks. However, instead of simple simulation this API provides some benefits: All loot will be automatically collected For some core tiers tool will not be damaged Left clicks are always charged. So sword will always hit with full power Function Returns Description use(mode: InteractionMode , direction?: Direction ) Result Emulates rightClick with item in selected slot swing(mode: InteractionMode , direction?: Direction ) Result Emulates leftClick with item in selected slot","title":"Interaction API"},{"location":"turtlematic/api/introduction/","text":"Turtlematic APIs \u00b6 This section of documentation will describe everything about APIs, that can be provided by different peripherals and general information how to read function tables. Take a note, that some turtle upgrades (actually, a lot of them) will have extra functions besides supported APIs. Parameters description \u00b6 Functions defined like call_name(required_arg_1: arg_type_1, required_arg_2: arg_type_2, optional_arg: arg_type_3) . Some types will have additional limitations, like \"only positive numbers\", or \"only numbers in specific range\". In case when limitations are not met, function will throw exception. New data types \u00b6 Mostly this sections contains enums, that are need to be passed as strings. Enums are case-insensetive, so you can pass them as you want. Name Lua type Limitations interactionMode string Enum with values: any, block, entity areaInteractionMode string Enum with values: item, block, entity direction string Enum with values: up, down Result boolean, string? - Result[T] T?, string? - Interaction mode \u00b6 All functions, that accept interactionMode as arguments, work with objects in line of sight. They will take as target the first object, that they found. You can force this functions to work only with blocks, or only with entities. Info You can get available interactionMode for specific APIs on core documentation page Warning Pretty important to note that a lot of entity interaction will be limited to specific entities. For example, Husbandry Automata Core allows to works only with animals. Always checks core documentation page to understand its limitation with entities. Area interaction mode \u00b6 All functions, that accept areaInteractionMode as arguments, work with objects in specific radius around it. You can get this radius via getConfiguration() method. Use this parameter to select what objects should to used for operation. Info You can get available areaInteractionMode for specific APIs on core documentation page Warning Pretty important to note that a lot of entity interaction will be limited to specific entities. For example, Husbandry Automata Core allows to works only with animals. Always checks core documentation page to understand its limitation with entities. Direction \u00b6 All functions, that accept direction as arguments, work with objects in line of sight. You can use this argument to change lint of sight and turtle will begin to start to look down (or up). Result \u00b6 Result are always representing result of called operation. First argument will tell you is operation was successful and second one will tell you reason why operation is failed. Result can also be parametrized, for example as Result[number] , which means it will return operation result as first argument (or nil) and as second argument it will tell you reason why operation is failed.","title":"Turtlematic APIs"},{"location":"turtlematic/api/introduction/#turtlematic-apis","text":"This section of documentation will describe everything about APIs, that can be provided by different peripherals and general information how to read function tables. Take a note, that some turtle upgrades (actually, a lot of them) will have extra functions besides supported APIs.","title":"Turtlematic APIs"},{"location":"turtlematic/api/introduction/#parameters-description","text":"Functions defined like call_name(required_arg_1: arg_type_1, required_arg_2: arg_type_2, optional_arg: arg_type_3) . Some types will have additional limitations, like \"only positive numbers\", or \"only numbers in specific range\". In case when limitations are not met, function will throw exception.","title":"Parameters description"},{"location":"turtlematic/api/introduction/#new-data-types","text":"Mostly this sections contains enums, that are need to be passed as strings. Enums are case-insensetive, so you can pass them as you want. Name Lua type Limitations interactionMode string Enum with values: any, block, entity areaInteractionMode string Enum with values: item, block, entity direction string Enum with values: up, down Result boolean, string? - Result[T] T?, string? -","title":"New data types"},{"location":"turtlematic/api/introduction/#interaction-mode","text":"All functions, that accept interactionMode as arguments, work with objects in line of sight. They will take as target the first object, that they found. You can force this functions to work only with blocks, or only with entities. Info You can get available interactionMode for specific APIs on core documentation page Warning Pretty important to note that a lot of entity interaction will be limited to specific entities. For example, Husbandry Automata Core allows to works only with animals. Always checks core documentation page to understand its limitation with entities.","title":"Interaction mode"},{"location":"turtlematic/api/introduction/#area-interaction-mode","text":"All functions, that accept areaInteractionMode as arguments, work with objects in specific radius around it. You can get this radius via getConfiguration() method. Use this parameter to select what objects should to used for operation. Info You can get available areaInteractionMode for specific APIs on core documentation page Warning Pretty important to note that a lot of entity interaction will be limited to specific entities. For example, Husbandry Automata Core allows to works only with animals. Always checks core documentation page to understand its limitation with entities.","title":"Area interaction mode"},{"location":"turtlematic/api/introduction/#direction","text":"All functions, that accept direction as arguments, work with objects in line of sight. You can use this argument to change lint of sight and turtle will begin to start to look down (or up).","title":"Direction"},{"location":"turtlematic/api/introduction/#result","text":"Result are always representing result of called operation. First argument will tell you is operation was successful and second one will tell you reason why operation is failed. Result can also be parametrized, for example as Result[number] , which means it will return operation result as first argument (or nil) and as second argument it will tell you reason why operation is failed.","title":"Result"},{"location":"turtlematic/api/look/","text":"Look API \u00b6 Look API are mostly just improved inspect from ComputerCraft Turtle API. It is not pretty useful by itself, but it helps to understand who will be targeted of another APIs, like Interaction API or Capture API . Function Returns Description look(mode: InteractionMode , direction?: Direction ) table Returns detailed information about first target in line of sight. Look output examples Entity Block { \"type\" : \"Cow\" , \"name\" : \"Cow\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" } { \"name\" : \"Grass Block\" , \"tags\" : [ \"minecraft:valid_spawn\" , \"minecraft:lush_ground_replaceable\" , \"minecraft:big_dripleaf_placeable\" , \"minecraft:animals_spawnable_on\" , \"computercraft:turtle_shovel_harvestable\" , \"minecraft:moss_replaceable\" , \"minecraft:azalea_root_replaceable\" , \"minecraft:rabbits_spawnable_on\" , \"minecraft:foxes_spawnable_on\" , \"minecraft:parrots_spawnable_on\" , \"minecraft:dirt\" , \"minecraft:enderman_holdable\" , \"minecraft:mineable/shovel\" , \"minecraft:bamboo_plantable_on\" , \"minecraft:azalea_grows_on\" , \"minecraft:wolves_spawnable_on\" ] }","title":"Look API"},{"location":"turtlematic/api/look/#look-api","text":"Look API are mostly just improved inspect from ComputerCraft Turtle API. It is not pretty useful by itself, but it helps to understand who will be targeted of another APIs, like Interaction API or Capture API . Function Returns Description look(mode: InteractionMode , direction?: Direction ) table Returns detailed information about first target in line of sight. Look output examples Entity Block { \"type\" : \"Cow\" , \"name\" : \"Cow\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" } { \"name\" : \"Grass Block\" , \"tags\" : [ \"minecraft:valid_spawn\" , \"minecraft:lush_ground_replaceable\" , \"minecraft:big_dripleaf_placeable\" , \"minecraft:animals_spawnable_on\" , \"computercraft:turtle_shovel_harvestable\" , \"minecraft:moss_replaceable\" , \"minecraft:azalea_root_replaceable\" , \"minecraft:rabbits_spawnable_on\" , \"minecraft:foxes_spawnable_on\" , \"minecraft:parrots_spawnable_on\" , \"minecraft:dirt\" , \"minecraft:enderman_holdable\" , \"minecraft:mineable/shovel\" , \"minecraft:bamboo_plantable_on\" , \"minecraft:azalea_grows_on\" , \"minecraft:wolves_spawnable_on\" ] }","title":"Look API"},{"location":"turtlematic/api/operation/","text":"Operation API \u00b6 Operation API mostly responsible for those peripheral methods, that are somehow influence surrounding worlds. Most of these operations will have cooldowns - so you can't call them without delay. Also, some operation with long cooldowns we have it at each turtle start or upgrade equipment, so take this in account. You can configure cooldowns in the configuration file. Also, threshold for initial cooldown also can be configured via initialCooldownSensetiveLevel or even disabled with isInitialCooldownEnabled settings key. Function Returns Description getCooldown(operationName: string) number Returns times in milliseconds of left cooldown getOperations() table (list of strings) Returns all available operations","title":"Operation API"},{"location":"turtlematic/api/operation/#operation-api","text":"Operation API mostly responsible for those peripheral methods, that are somehow influence surrounding worlds. Most of these operations will have cooldowns - so you can't call them without delay. Also, some operation with long cooldowns we have it at each turtle start or upgrade equipment, so take this in account. You can configure cooldowns in the configuration file. Also, threshold for initial cooldown also can be configured via initialCooldownSensetiveLevel or even disabled with isInitialCooldownEnabled settings key. Function Returns Description getCooldown(operationName: string) number Returns times in milliseconds of left cooldown getOperations() table (list of strings) Returns all available operations","title":"Operation API"},{"location":"turtlematic/api/scan/","text":"Scan API \u00b6 Axises Illustrative description of relative coordinate axes for turtle Scan API is an interesting one. It allows use to analyze environment around turtle in specific radius . However, result always will be orientation-related, direction in which turtle facing will be counted as X axis and direction at right of turtle will be counted as Z axis. This behavior will match Minecraft world axes when turtle facing east. Warning radius should be positive integer Function Returns Description scan(mode: AreaInteractionMode , radius?: number) table Scan surrounded area for objects with selected mode. Radius is optional, by default it will be max radius for core Scan output examples Items Entity Block [ { \"x\" : -1 , \"y\" : 0 , \"z\" : 0 , \"count\" : 2 , \"maxStackSize\" : 64 , \"tags\" : [ \"minecraft:piglin_loved\" , \"computercraft:turtle\" ], \"technicalName\" : \"computercraft:turtle_advanced\" , \"name\" : \"Advanced Wireless Automata Turtle\" }, { \"x\" : 0 , \"y\" : 0 , \"z\" : -1 , \"count\" : 1 , \"maxStackSize\" : 64 , \"tags\" : [ \"minecraft:piglin_loved\" , \"computercraft:computer\" ], \"technicalName\" : \"computercraft:computer_advanced\" , \"name\" : \"Advanced Computer\" } ] [ { \"type\" : \"Panda\" , \"tags\" : {}, \"id\" : 19 , \"y\" : 0 , \"x\" : -16 , \"name\" : \"Panda\" , \"category\" : \"CREATURE\" , \"z\" : -17 , \"uuid\" : \"f5bd1195-9466-4106-ab94-0c9a854b6b5f\" }, { \"type\" : \"Panda\" , \"tags\" : {}, \"id\" : 39 , \"y\" : 0 , \"x\" : 11 , \"name\" : \"Pretty awesome panda\" , \"category\" : \"CREATURE\" , \"z\" : -12 , \"uuid\" : \"db90ecf0-57f6-40b2-8c2a-0d959d477937\" } ] [ { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : 0 , \"x\" : 0 , \"name\" : \"Advanced Turtle\" , \"z\" : 0 , \"tags\" : [ \"computercraft:turtle\" , \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] } ]","title":"Scan API"},{"location":"turtlematic/api/scan/#scan-api","text":"Axises Illustrative description of relative coordinate axes for turtle Scan API is an interesting one. It allows use to analyze environment around turtle in specific radius . However, result always will be orientation-related, direction in which turtle facing will be counted as X axis and direction at right of turtle will be counted as Z axis. This behavior will match Minecraft world axes when turtle facing east. Warning radius should be positive integer Function Returns Description scan(mode: AreaInteractionMode , radius?: number) table Scan surrounded area for objects with selected mode. Radius is optional, by default it will be max radius for core Scan output examples Items Entity Block [ { \"x\" : -1 , \"y\" : 0 , \"z\" : 0 , \"count\" : 2 , \"maxStackSize\" : 64 , \"tags\" : [ \"minecraft:piglin_loved\" , \"computercraft:turtle\" ], \"technicalName\" : \"computercraft:turtle_advanced\" , \"name\" : \"Advanced Wireless Automata Turtle\" }, { \"x\" : 0 , \"y\" : 0 , \"z\" : -1 , \"count\" : 1 , \"maxStackSize\" : 64 , \"tags\" : [ \"minecraft:piglin_loved\" , \"computercraft:computer\" ], \"technicalName\" : \"computercraft:computer_advanced\" , \"name\" : \"Advanced Computer\" } ] [ { \"type\" : \"Panda\" , \"tags\" : {}, \"id\" : 19 , \"y\" : 0 , \"x\" : -16 , \"name\" : \"Panda\" , \"category\" : \"CREATURE\" , \"z\" : -17 , \"uuid\" : \"f5bd1195-9466-4106-ab94-0c9a854b6b5f\" }, { \"type\" : \"Panda\" , \"tags\" : {}, \"id\" : 39 , \"y\" : 0 , \"x\" : 11 , \"name\" : \"Pretty awesome panda\" , \"category\" : \"CREATURE\" , \"z\" : -12 , \"uuid\" : \"db90ecf0-57f6-40b2-8c2a-0d959d477937\" } ] [ { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : 1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : 0 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : 0 , \"x\" : 0 , \"name\" : \"Advanced Turtle\" , \"z\" : 0 , \"tags\" : [ \"computercraft:turtle\" , \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : -1 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 0 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] }, { \"y\" : -1 , \"x\" : 1 , \"name\" : \"Polished Granite\" , \"z\" : -1 , \"tags\" : [ \"minecraft:mineable/pickaxe\" ] } ]","title":"Scan API"},{"location":"turtlematic/api/warp/","text":"Warp API \u00b6 Warp API essentially comes from harvesting power of The End itself. It allows you to jump to previously stored points instantly and with reduced cost. Danger Due to ComputerCraft limitations all stored points data will be lost if you unequip turtle upgrade. Danger This API is dimension-bound. If you somehow change turtle dimension this will require full reset Warning Points are limited per upgrade. It controlled by endAutomataCoreWarpPointLimit Minecraft settings and by default it is 64 Function Returns Description savePoint(name: string) Result Saves current turtle location into data for future use deletePoint(name: string) Result Delete points if it exists warpToPoint(name: string) Result Teleport turtle to stored point if turtle has enough fuel points() table Returns list of point names estimateWarpCost(name: string) number Returns cost of warp in fuel distanceToPoint(name: string number Return manhattan distance to point","title":"Warp API"},{"location":"turtlematic/api/warp/#warp-api","text":"Warp API essentially comes from harvesting power of The End itself. It allows you to jump to previously stored points instantly and with reduced cost. Danger Due to ComputerCraft limitations all stored points data will be lost if you unequip turtle upgrade. Danger This API is dimension-bound. If you somehow change turtle dimension this will require full reset Warning Points are limited per upgrade. It controlled by endAutomataCoreWarpPointLimit Minecraft settings and by default it is 64 Function Returns Description savePoint(name: string) Result Saves current turtle location into data for future use deletePoint(name: string) Result Delete points if it exists warpToPoint(name: string) Result Teleport turtle to stored point if turtle has enough fuel points() table Returns list of point names estimateWarpCost(name: string) number Returns cost of warp in fuel distanceToPoint(name: string number Return manhattan distance to point","title":"Warp API"},{"location":"turtlematic/automata/automata/","text":"Automata \u00b6 Picture Your first automata core, that starts your journey into mystery turtlematic world. Evolving \u00b6 This automata core can be supplied with souls via soul scrapper to transform into: End automata Husbandry automata Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Interaction API : only interaction with blocks are allowed Scan API : only interaction with items are allowed","title":"Base automata"},{"location":"turtlematic/automata/automata/#automata","text":"Picture Your first automata core, that starts your journey into mystery turtlematic world.","title":"Automata"},{"location":"turtlematic/automata/automata/#evolving","text":"This automata core can be supplied with souls via soul scrapper to transform into: End automata Husbandry automata","title":"Evolving"},{"location":"turtlematic/automata/automata/#supported-apis","text":"Configuration API Fuel API Operation API Look API Interaction API : only interaction with blocks are allowed Scan API : only interaction with items are allowed","title":"Supported APIs"},{"location":"turtlematic/automata/brewing/","text":"Brewing automata \u00b6 Automata that harness power of cleric villager, allows you to perform brew potions, throw it and curing villagers Obtaining \u00b6 Feed cleric villager to forged automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Experience API Scan API : only for items and zombie villagers Interaction API : only for blocks and zombie villagers Extra methods \u00b6 Function Returns Description brew() Result Performs brew operations, applying item in selected slot as brewing component to all potions in inventory. throwPotion(power?: number, uncertainty?: number) Result Throws potion in selected slot with provided power (controls max distance) and uncertainty (controls deviation) Notes \u00b6 XP notes Brewing operations often provides some XP that will be stored in turtle Extra information about zombie villagers To help you understand power of your potions, you will receive extra information about entities with Look API and Scan API { \"type\" : \"Cow\" , \"name\" : \"Cow\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" , \"effects\" : [ { \"amplifier\" : 0 , \"duration\" : 1474 , \"isAmbient\" : false , \"name\" : \"Regeneration\" , \"technicalName\" : \"effects.minecraft.regeneration\" } ] } How do I supposed to get water bottles? You can use glass bottles on water sources","title":"Brewing automata"},{"location":"turtlematic/automata/brewing/#brewing-automata","text":"Automata that harness power of cleric villager, allows you to perform brew potions, throw it and curing villagers","title":"Brewing automata"},{"location":"turtlematic/automata/brewing/#obtaining","text":"Feed cleric villager to forged automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/brewing/#supported-apis","text":"Configuration API Fuel API Operation API Look API Experience API Scan API : only for items and zombie villagers Interaction API : only for blocks and zombie villagers","title":"Supported APIs"},{"location":"turtlematic/automata/brewing/#extra-methods","text":"Function Returns Description brew() Result Performs brew operations, applying item in selected slot as brewing component to all potions in inventory. throwPotion(power?: number, uncertainty?: number) Result Throws potion in selected slot with provided power (controls max distance) and uncertainty (controls deviation)","title":"Extra methods"},{"location":"turtlematic/automata/brewing/#notes","text":"XP notes Brewing operations often provides some XP that will be stored in turtle Extra information about zombie villagers To help you understand power of your potions, you will receive extra information about entities with Look API and Scan API { \"type\" : \"Cow\" , \"name\" : \"Cow\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" , \"effects\" : [ { \"amplifier\" : 0 , \"duration\" : 1474 , \"isAmbient\" : false , \"name\" : \"Regeneration\" , \"technicalName\" : \"effects.minecraft.regeneration\" } ] } How do I supposed to get water bottles? You can use glass bottles on water sources","title":"Notes"},{"location":"turtlematic/automata/enchanting/","text":"Enchanting automata \u00b6 Automata that harness power of librarian villager, allows you to works with enchantments. Obtaining \u00b6 Feed librarian villager to forged automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Experience API Extra methods \u00b6 Function Returns Description getEnchantmentPower() number Returns current enchantment power around turtle getPossibleEnchantments() table Returns list of possible enchantment with current enchantment power level for item in selected slot. It will always return 3 suggestions like default enchanting table. Also it always shows only ONE enchantment even if more will be applied refreshEnchantments() nil Refresh enchantments in list of possible enchantments. This is an only way to get different enchantments without performing enchantments enchant(selected: number) Result Tries to perform enchantment on item with selected enchantment from list of possible enchatments. Selected should be 1, 2 or 3. Consumes XP from XP storage as for usual enchantment extractEnchantment(target: number) Result Tries to extract enchantments from item in selected slot to item in target slot. An item in target slot should contain only 1 book. There is a small chance that one enchantment will be lost in the process Notes \u00b6 Enchantment power gathering To perform enchantment you need to make sure, that you have enough enchantment power. Any head or bookshelf around turtle (radius of influence is 2 blocks) will give 2 extra points of enchantment power. Take a note, that turtles in the same radius will give two extra enchantment power points per enchanting book in their inventory.","title":"Enchanting automata"},{"location":"turtlematic/automata/enchanting/#enchanting-automata","text":"Automata that harness power of librarian villager, allows you to works with enchantments.","title":"Enchanting automata"},{"location":"turtlematic/automata/enchanting/#obtaining","text":"Feed librarian villager to forged automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/enchanting/#supported-apis","text":"Configuration API Fuel API Operation API Experience API","title":"Supported APIs"},{"location":"turtlematic/automata/enchanting/#extra-methods","text":"Function Returns Description getEnchantmentPower() number Returns current enchantment power around turtle getPossibleEnchantments() table Returns list of possible enchantment with current enchantment power level for item in selected slot. It will always return 3 suggestions like default enchanting table. Also it always shows only ONE enchantment even if more will be applied refreshEnchantments() nil Refresh enchantments in list of possible enchantments. This is an only way to get different enchantments without performing enchantments enchant(selected: number) Result Tries to perform enchantment on item with selected enchantment from list of possible enchatments. Selected should be 1, 2 or 3. Consumes XP from XP storage as for usual enchantment extractEnchantment(target: number) Result Tries to extract enchantments from item in selected slot to item in target slot. An item in target slot should contain only 1 book. There is a small chance that one enchantment will be lost in the process","title":"Extra methods"},{"location":"turtlematic/automata/enchanting/#notes","text":"Enchantment power gathering To perform enchantment you need to make sure, that you have enough enchantment power. Any head or bookshelf around turtle (radius of influence is 2 blocks) will give 2 extra points of enchantment power. Take a note, that turtles in the same radius will give two extra enchantment power points per enchanting book in their inventory.","title":"Notes"},{"location":"turtlematic/automata/end/","text":"End automata \u00b6 Picture Advanced automata that can harness power of the End. Obtaining \u00b6 Feed 3 enderman souls to automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Interaction API : only interaction with blocks are allowed Scan API : only interaction with items are allowed Warp API Capture API : only interaction with blocks are allowed","title":"End automata"},{"location":"turtlematic/automata/end/#end-automata","text":"Picture Advanced automata that can harness power of the End.","title":"End automata"},{"location":"turtlematic/automata/end/#obtaining","text":"Feed 3 enderman souls to automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/end/#supported-apis","text":"Configuration API Fuel API Operation API Look API Interaction API : only interaction with blocks are allowed Scan API : only interaction with items are allowed Warp API Capture API : only interaction with blocks are allowed","title":"Supported APIs"},{"location":"turtlematic/automata/husbandry/","text":"Husbandry automata \u00b6 Picture Advanced automata that can harness power of the nature. This automata provider extra capabilities of take care about peaceful mobs and crops (nether wart and cocoa beans included!). Obtaining \u00b6 Feed 1 pig, 1 chiken, 1 sheep and 1 cow souls to automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Interaction API : allows interaction with blocks and some entities Scan API : allows interaction with items and some entities Capture API : only interaction with some entities Extra methods \u00b6 Function Returns Description harvest(direction?: Direction ) Result Tries to harvest crop. Crop will not be broken, works like right click harvest Notes \u00b6 Which entity are usable for husbandry automata If at least one of criteria met: Entity is friendly Entity have \"creature\" category Entity have turtlematic:husbandry_extra_animal tag What is count as crops If at least one of criteria met: Block are extends CropBlock Block has age attribute and turtlematic:husbandry_extra_crops Extra information about animals Sometimes 1 this automata will show extra information about animals when you use Look or Scan APIs. For example, this is output for sheep { \"type\" : \"Sheep\" , \"name\" : \"Sheep\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" , //here goes extra fields \"aggresive\" : false , \"baby\" : false , \"inLove\" : false , \"aggresive\" : false , \"shearable\" : true } Extra information about blocks If block has age property, extra data about it will be provided when you use Look API . { \"age\" : 2 , \"maxAge\" : 2 , \"name\" : \"Cocoa\" , \"tags\" : [ \"minecraft:mineable/axe\" , \"turtlematic:husbandry_extra_crops\" ] } For beehive and bee nest there a lot of extra data will be provided when you use Look API . { \"honetLevel\" : 3 , \"name\" : \"Bee Nest\" , \"isFull\" : false , \"isSmoked\" : false , \"bees\" : [ \"hasFlower\" : true , \"hasNectar\" : true , \"hasStung\" : false , \"health\" : 10 , \"id\" : \"minecraft:bee\" , \"name\" : \"Bee\" , \"minOccupationTicks\" : 2400 , \"ticksInHive\" : 283 ] \"tags\" : [ \"minecraft:mineable/axe\" , \"minecraft:beehives\" ] } When entity class extends Animal. shearable available when entity class extends Animal and implements Shearable interface \u21a9","title":"Husbandry automata"},{"location":"turtlematic/automata/husbandry/#husbandry-automata","text":"Picture Advanced automata that can harness power of the nature. This automata provider extra capabilities of take care about peaceful mobs and crops (nether wart and cocoa beans included!).","title":"Husbandry automata"},{"location":"turtlematic/automata/husbandry/#obtaining","text":"Feed 1 pig, 1 chiken, 1 sheep and 1 cow souls to automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/husbandry/#supported-apis","text":"Configuration API Fuel API Operation API Look API Interaction API : allows interaction with blocks and some entities Scan API : allows interaction with items and some entities Capture API : only interaction with some entities","title":"Supported APIs"},{"location":"turtlematic/automata/husbandry/#extra-methods","text":"Function Returns Description harvest(direction?: Direction ) Result Tries to harvest crop. Crop will not be broken, works like right click harvest","title":"Extra methods"},{"location":"turtlematic/automata/husbandry/#notes","text":"Which entity are usable for husbandry automata If at least one of criteria met: Entity is friendly Entity have \"creature\" category Entity have turtlematic:husbandry_extra_animal tag What is count as crops If at least one of criteria met: Block are extends CropBlock Block has age attribute and turtlematic:husbandry_extra_crops Extra information about animals Sometimes 1 this automata will show extra information about animals when you use Look or Scan APIs. For example, this is output for sheep { \"type\" : \"Sheep\" , \"name\" : \"Sheep\" , \"category\" : \"CREATURE\" , \"id\" : 1269 , \"tags\" : {}, \"uuid\" : \"0737fd25-a1b6-4a1a-9cdd-3081e0155bb6\" , //here goes extra fields \"aggresive\" : false , \"baby\" : false , \"inLove\" : false , \"aggresive\" : false , \"shearable\" : true } Extra information about blocks If block has age property, extra data about it will be provided when you use Look API . { \"age\" : 2 , \"maxAge\" : 2 , \"name\" : \"Cocoa\" , \"tags\" : [ \"minecraft:mineable/axe\" , \"turtlematic:husbandry_extra_crops\" ] } For beehive and bee nest there a lot of extra data will be provided when you use Look API . { \"honetLevel\" : 3 , \"name\" : \"Bee Nest\" , \"isFull\" : false , \"isSmoked\" : false , \"bees\" : [ \"hasFlower\" : true , \"hasNectar\" : true , \"hasStung\" : false , \"health\" : 10 , \"id\" : \"minecraft:bee\" , \"name\" : \"Bee\" , \"minOccupationTicks\" : 2400 , \"ticksInHive\" : 283 ] \"tags\" : [ \"minecraft:mineable/axe\" , \"minecraft:beehives\" ] } When entity class extends Animal. shearable available when entity class extends Animal and implements Shearable interface \u21a9","title":"Notes"},{"location":"turtlematic/automata/mason/","text":"Mason automata \u00b6 Automata that harness power of mason villager, allows you to modify appearance of different blocks in world and inventory. Mason automata also has mod support: Chipped Obtaining \u00b6 Feed mason villager to forged automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Experience API Extra methods \u00b6 Function Returns Description getAlternatives(\"inventory\") table Returns list of possible alternatives for item in selected slot getAlternatives(\"block\", direction?: Direction ) table Returns list of possible alternatives for block in world chisel(\"inventory\", target: string, limit?: number) Result Tries to chisel item in selected slot in inventory up to limit amount. Result will be put into inventory, extra items will be dropped in world chisel(\"block\", target: string, direction?: Direction ) Result Tries to chisel block in world. If this is possible, block will be transformed in-place, if this is not possible result will be put into inventory, extra items will be dropped in world rotate(rotation: Rotation, direction?: Direction ) Result Tries to rotate block in-place turnOver(direction?: Direction ) Result Tries to turn over block in-place getPossibleShapes(direction?: Direction ) table Returns list of possible shapes for block changeShape(shape: string, direction?: Direction ) Result Tries to transform block to passed shape Notes \u00b6 Extra information about blocks To help you understand position of block, mason automata will return extra information when using Look API { \"name\" : \"Mossy Stone Brick Stairs\" , \"tags\" : [ \"minecraft:stairs\" , \"minecraft:mineable/pickaxe\" ], \"properties\" : { \"facing\" : \"north\" , \"half\" : \"bottom\" , \"shape\" : \"straight\" , \"watterlogged\" : \"false\" } }","title":"Mason automata"},{"location":"turtlematic/automata/mason/#mason-automata","text":"Automata that harness power of mason villager, allows you to modify appearance of different blocks in world and inventory. Mason automata also has mod support: Chipped","title":"Mason automata"},{"location":"turtlematic/automata/mason/#obtaining","text":"Feed mason villager to forged automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/mason/#supported-apis","text":"Configuration API Fuel API Operation API Look API Experience API","title":"Supported APIs"},{"location":"turtlematic/automata/mason/#extra-methods","text":"Function Returns Description getAlternatives(\"inventory\") table Returns list of possible alternatives for item in selected slot getAlternatives(\"block\", direction?: Direction ) table Returns list of possible alternatives for block in world chisel(\"inventory\", target: string, limit?: number) Result Tries to chisel item in selected slot in inventory up to limit amount. Result will be put into inventory, extra items will be dropped in world chisel(\"block\", target: string, direction?: Direction ) Result Tries to chisel block in world. If this is possible, block will be transformed in-place, if this is not possible result will be put into inventory, extra items will be dropped in world rotate(rotation: Rotation, direction?: Direction ) Result Tries to rotate block in-place turnOver(direction?: Direction ) Result Tries to turn over block in-place getPossibleShapes(direction?: Direction ) table Returns list of possible shapes for block changeShape(shape: string, direction?: Direction ) Result Tries to transform block to passed shape","title":"Extra methods"},{"location":"turtlematic/automata/mason/#notes","text":"Extra information about blocks To help you understand position of block, mason automata will return extra information when using Look API { \"name\" : \"Mossy Stone Brick Stairs\" , \"tags\" : [ \"minecraft:stairs\" , \"minecraft:mineable/pickaxe\" ], \"properties\" : { \"facing\" : \"north\" , \"half\" : \"bottom\" , \"shape\" : \"straight\" , \"watterlogged\" : \"false\" } }","title":"Notes"},{"location":"turtlematic/automata/smithing/","text":"Smithing automata \u00b6 Automata that harness power of toolsmithing villager, allows you to perform smithing operation and smelt items. Obtaining \u00b6 Feed toolsmithing villager to forged automata core with soul scrapper to obtain it. Supported APIs \u00b6 Configuration API Fuel API Operation API Look API Experience API Extra methods \u00b6 Function Returns Description smith() Result Perform smithing operation, upgrading item in selected slot with next one smelt(\"inventory\", limit?: number) Result Tries to smelt item in selected slot in inventory up to limit amount. Result will be put into inventory, extra items will be dropped in world smelt(\"block\", direction?: Direction Result Tries to smelt block in world. If this is possible, block will be transformed in-place, if this is not possible result will be put into inventory, extra items will be dropped in world Notes \u00b6 XP notes All XP for smelting operations will be stored inside turtle","title":"Smithing automata"},{"location":"turtlematic/automata/smithing/#smithing-automata","text":"Automata that harness power of toolsmithing villager, allows you to perform smithing operation and smelt items.","title":"Smithing automata"},{"location":"turtlematic/automata/smithing/#obtaining","text":"Feed toolsmithing villager to forged automata core with soul scrapper to obtain it.","title":"Obtaining"},{"location":"turtlematic/automata/smithing/#supported-apis","text":"Configuration API Fuel API Operation API Look API Experience API","title":"Supported APIs"},{"location":"turtlematic/automata/smithing/#extra-methods","text":"Function Returns Description smith() Result Perform smithing operation, upgrading item in selected slot with next one smelt(\"inventory\", limit?: number) Result Tries to smelt item in selected slot in inventory up to limit amount. Result will be put into inventory, extra items will be dropped in world smelt(\"block\", direction?: Direction Result Tries to smelt block in world. If this is possible, block will be transformed in-place, if this is not possible result will be put into inventory, extra items will be dropped in world","title":"Extra methods"},{"location":"turtlematic/automata/smithing/#notes","text":"XP notes All XP for smelting operations will be stored inside turtle","title":"Notes"},{"location":"turtlematic/miscellaneous/creative_chest/","text":"Creative chest \u00b6 Why the hell in creative mode turtle can't generate items? Tell no more, this upgrade just for you. Picture Function Returns Description generate(item: string, count: number, nbtData: string?) Result Tries to put required item with required count into turtle inventory How in hell does nbtData works? NBT data passing from ComputerCraft to Minecraft are ... complicated task. So currently, nbtData are just string that expected to be minecraft NBT data serialized into json. You can try generate(\"minecraft:potion\", 1, \"{Potion:\\\"minecraft:long_regeneration\\\"}\") to understand how it works","title":"Creative chest"},{"location":"turtlematic/miscellaneous/creative_chest/#creative-chest","text":"Why the hell in creative mode turtle can't generate items? Tell no more, this upgrade just for you. Picture Function Returns Description generate(item: string, count: number, nbtData: string?) Result Tries to put required item with required count into turtle inventory How in hell does nbtData works? NBT data passing from ComputerCraft to Minecraft are ... complicated task. So currently, nbtData are just string that expected to be minecraft NBT data serialized into json. You can try generate(\"minecraft:potion\", 1, \"{Potion:\\\"minecraft:long_regeneration\\\"}\") to understand how it works","title":"Creative chest"},{"location":"turtlematic/miscellaneous/lava_bucket/","text":"Lava bucket turtle \u00b6 Picture Did you tired from a lot of random trash in your turtle inventory? Tell me no more, now you can use lava bucket as peripheral for turtle to void items in your inventory Peripheral methods \u00b6 Function Returns Description void() nil Deletes item in selected slot","title":"Lava bucket turtle"},{"location":"turtlematic/miscellaneous/lava_bucket/#lava-bucket-turtle","text":"Picture Did you tired from a lot of random trash in your turtle inventory? Tell me no more, now you can use lava bucket as peripheral for turtle to void items in your inventory","title":"Lava bucket turtle"},{"location":"turtlematic/miscellaneous/lava_bucket/#peripheral-methods","text":"Function Returns Description void() nil Deletes item in selected slot","title":"Peripheral methods"},{"location":"turtlematic/miscellaneous/piston_turtle/","text":"Piston and sticky piston turtles \u00b6 Picture So, this is piston turtle! Now piston and sticky piston are valid upgrades for turtles and can be attached to them! Piston methods \u00b6 Function Returns Description push() Result Tries to push block that currently facing. Works exacly like piston Sticky piston methods \u00b6 Function Returns Description push() Result Tries to push block that currently facing. Works exactly like piston pull() Result Tries to pull block that currently facing. Between this block and turtle should be one empty block. Works exactly like sticky piston collapsing","title":"Piston turtle"},{"location":"turtlematic/miscellaneous/piston_turtle/#piston-and-sticky-piston-turtles","text":"Picture So, this is piston turtle! Now piston and sticky piston are valid upgrades for turtles and can be attached to them!","title":"Piston and sticky piston turtles"},{"location":"turtlematic/miscellaneous/piston_turtle/#piston-methods","text":"Function Returns Description push() Result Tries to push block that currently facing. Works exacly like piston","title":"Piston methods"},{"location":"turtlematic/miscellaneous/piston_turtle/#sticky-piston-methods","text":"Function Returns Description push() Result Tries to push block that currently facing. Works exactly like piston pull() Result Tries to pull block that currently facing. Between this block and turtle should be one empty block. Works exactly like sticky piston collapsing","title":"Sticky piston methods"},{"location":"turtlematic/miscellaneous/soul_scrapper/","text":"Soul scrapper \u00b6 Picture Terrible tool, that allows you to infuse an item in a selected slot with soul of any mob, that you will find on the way. What I can infuse? Currently, only automata core can be infused Function Returns Description harvestSoul() Result Tries to harvest entity soul at line of sight of turtle into item in selected slot getLeftEntities() table or nil, string or nil Tries to get information about left entities to fill soul. Returns table if item in selected slot have started consuming soul and nil with error otherwise getLeftEntities output examples [ { \"name\" : \"Cow\" , \"leftCount\" : 1 }, { \"name\" : \"Sheep\" , \"leftCount\" : 1 }, { \"name\" : \"Pig\" , \"leftCount\" : 1 } ]","title":"Soul scrapper"},{"location":"turtlematic/miscellaneous/soul_scrapper/#soul-scrapper","text":"Picture Terrible tool, that allows you to infuse an item in a selected slot with soul of any mob, that you will find on the way. What I can infuse? Currently, only automata core can be infused Function Returns Description harvestSoul() Result Tries to harvest entity soul at line of sight of turtle into item in selected slot getLeftEntities() table or nil, string or nil Tries to get information about left entities to fill soul. Returns table if item in selected slot have started consuming soul and nil with error otherwise getLeftEntities output examples [ { \"name\" : \"Cow\" , \"leftCount\" : 1 }, { \"name\" : \"Sheep\" , \"leftCount\" : 1 }, { \"name\" : \"Pig\" , \"leftCount\" : 1 } ]","title":"Soul scrapper"},{"location":"turtlematic/miscellaneous/turtle_chatter/","text":"Turtle chatter \u00b6 Turtle chatter is a small module that allows you to display messages above turtle. Info Text will be additionally wrapped and text will be shifted to new line in case when it is longer than 160 pixels. Line breaker symbol \\n works. Currently message can be only 6 lines, extra lines will be ignored. Warning This upgrade is experimental. Text render can sometimes be pretty ugly, also this is possible for API changes Function Returns Description getMessage() string? Returns current stored message setMessage(text: string) nil Update stored message clearMessage() nil Clears stored message How can I get colored text? You can pass minecraft formatting symbols. For example setMessage(\"\\xA74Red message\") will generate red message, because \\xA7 converts into \u00a7 and 4 is dark red.","title":"Turtle chatter"},{"location":"turtlematic/miscellaneous/turtle_chatter/#turtle-chatter","text":"Turtle chatter is a small module that allows you to display messages above turtle. Info Text will be additionally wrapped and text will be shifted to new line in case when it is longer than 160 pixels. Line breaker symbol \\n works. Currently message can be only 6 lines, extra lines will be ignored. Warning This upgrade is experimental. Text render can sometimes be pretty ugly, also this is possible for API changes Function Returns Description getMessage() string? Returns current stored message setMessage(text: string) nil Update stored message clearMessage() nil Clears stored message How can I get colored text? You can pass minecraft formatting symbols. For example setMessage(\"\\xA74Red message\") will generate red message, because \\xA7 converts into \u00a7 and 4 is dark red.","title":"Turtle chatter"}]}